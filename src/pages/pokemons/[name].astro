---
import type { GetStaticPaths } from "astro"
import MainLayout from "@/layout/MainLayout.astro"
import PokemonCard from "@/components/pokemons/PokemonCard.astro"
import type { PokemonListResponse } from "@/types/pokemon-list-response"
import Title from "@/components/shared/Title.astro"
import { Icon } from "astro-icon/components"

interface Props {
  url: string
}

export const getStaticPaths = (async () => {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151")
  const { results } = (await res.json()) as PokemonListResponse

  return results.map(({ name, url }) => ({
    params: { name },
    props: { url: `https://pokeapi.co/api/v2/pokemon/${url}` }
  }))
}) satisfies GetStaticPaths

const { name } = Astro.params
const { url } = Astro.props

const pokemonId = url.split("/").at(-2)
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${pokemonId}.ogg`

const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonId}.png`
---

<MainLayout
  title={`Pokémon - ${pokemonId} ${name}`}
  description={`Información del Pokémon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div class="flex justify-between items-center gap-5">
        <button
          onclick="history.back()"
          class="text-blue-500"
          >← Regresar</button
        >

        <Title className="capitalize">
          {name}
        </Title>
      </div>

      <button
        id="btn-favorite"
        data-name={name}
        data-id={pokemonId}
        class="ml-4"
      >
        <Icon
          name="heart-outline"
          size={40}
          data-outline
        />
        <Icon
          name="heart-full"
          size={40}
          data-full
          class="hidden"
        />
      </button>
    </div>

    <PokemonCard
      name={name}
      url={url}
      isBig
    />

    <audio
      controls
      class="mt-5"
    >
      <source
        src={audioSrc}
        type="audio/ogg"
      />
      Tu navegador no soporta el elemento <code>audio</code>.
    </audio>
  </section>
</MainLayout>

<script>
  import type { FavoritePokemon } from "@/types/favorite-pokemon"

  const handlePageLoad = () => {
    let favoritesPokemons: FavoritePokemon[] = JSON.parse(
      localStorage.getItem("favoritePokemons") ?? "[]"
    )

    const $btnFavorite = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement

    if (!$btnFavorite) return

    const name = $btnFavorite.dataset.name ?? ""
    const id = $btnFavorite.dataset.id ?? ""
    const isFavorite = favoritesPokemons.some((fav) => fav.name === name)

    const $heartOutline = $btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement

    const $heartFull = $btnFavorite.querySelector("[data-full]") as HTMLElement

    if (isFavorite) {
      $heartFull.classList.toggle("hidden")
      $heartOutline.classList.toggle("hidden")
    }

    const toggleFavorite = () => {
      const isFavorite = favoritesPokemons.some((fav) => fav.name === name)

      if (isFavorite) {
        favoritesPokemons = favoritesPokemons.filter((fav) => fav.name !== name)
      } else {
        favoritesPokemons.push({ id: Number(id), name })
      }

      localStorage.setItem(
        "favoritePokemons",
        JSON.stringify(favoritesPokemons)
      )

      $heartFull.classList.toggle("hidden")
      $heartOutline.classList.toggle("hidden")
    }
    $btnFavorite.addEventListener("click", toggleFavorite)
  }

  document.addEventListener("astro:page-load", handlePageLoad)
</script>

<style>
  a {
    @apply hover:underline text-blue-500;
  }

  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
